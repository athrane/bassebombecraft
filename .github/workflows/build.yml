on: [push]

name: BasseBombeCraft build pipeline

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      id: checkout_source
      uses: actions/checkout@v1

    - name: Install jq
      id: install_jq    
      run: sudo apt-get install jq

    - name: Echo version.json
      id: echo_version_json
      run: cat ./version.json | jq '.'        

    - name: Read version.json
      id: read_version_json
      run: echo ::set-output name=json::$(cat ./version.json | jq '.')

    - name: Echo test 1
      run: echo "${{ steps.read_version_json.outputs.json }}"      
	
    - name: Echo test 2
      run: "${{ steps.read_version_json.outputs.json }} | jq. '.minecraftVersion'"       
              
    - name: Parse version.json
      id: parse_version_json
      uses: gr2m/get-json-paths-action@v1.x
      with:
        json: ${{ steps.read_version_json.outputs.json }} 

    - name: Echo mod version 
      id: echo_mod_version
      run: "Mod version is ${{ steps.parse_version_json.outputs.minecraftVersion }}"      

    - name: Echo MC version 
      id: echo_mc_version
      run: "MC version is ${{ steps.parse_version_json.outputs.minecraftVersion }}"      

    - name: Setup JDK 1.8
      id: init_jdk
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Display the path
      id: ls_path
      run: ls -la
      shell: bash

    - name: Make gradlew executable
      id: make_gradle_executable
      run: chmod +x ./gradlew
      shell: bash

    - name: Delete gradle.properties
      id: delete_gradle_properties
      run: rm ./gradle.properties
      shell: bash

    - name: Build with Gradle
      id: build_gradle
      run: ./gradlew build

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      id: upload_release_asset    
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./build/libs/BasseBombeCraft-${{ steps.read_version_json.outputs.minecraftVersion }}-${{ steps.read_version_json.outputs.minecraftVersion }}.jar
        asset_name: BasseBombeCraft-${{ steps.read_version_json.outputs.minecraftVersion }}-${{ steps.read_version_json.outputs.minecraftVersion }}.jar
        asset_content_type: application/zip

    - name: Publish to GitHub Registry 
      run: ./gradlew publish